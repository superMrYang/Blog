
package com.demo;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "K2CallBackService", targetNamespace = "service.k2callback.webservice.workorder.hypersmart.com", wsdlLocation = "http://localhost:8089/webservice/webservice?wsdl")
public class K2CallBackService_Service
    extends Service
{

    private final static URL K2CALLBACKSERVICE_WSDL_LOCATION;
    private final static WebServiceException K2CALLBACKSERVICE_EXCEPTION;
    private final static QName K2CALLBACKSERVICE_QNAME = new QName("service.k2callback.webservice.workorder.hypersmart.com", "K2CallBackService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8089/webservice/webservice?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        K2CALLBACKSERVICE_WSDL_LOCATION = url;
        K2CALLBACKSERVICE_EXCEPTION = e;
    }

    public K2CallBackService_Service() {
        super(__getWsdlLocation(), K2CALLBACKSERVICE_QNAME);
    }

    public K2CallBackService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), K2CALLBACKSERVICE_QNAME, features);
    }

    public K2CallBackService_Service(URL wsdlLocation) {
        super(wsdlLocation, K2CALLBACKSERVICE_QNAME);
    }

    public K2CallBackService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, K2CALLBACKSERVICE_QNAME, features);
    }

    public K2CallBackService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public K2CallBackService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns K2CallBackService
     */
    @WebEndpoint(name = "K2CallBackServiceImplPort")
    public K2CallBackService getK2CallBackServiceImplPort() {
        return super.getPort(new QName("service.k2callback.webservice.workorder.hypersmart.com", "K2CallBackServiceImplPort"), K2CallBackService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns K2CallBackService
     */
    @WebEndpoint(name = "K2CallBackServiceImplPort")
    public K2CallBackService getK2CallBackServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("service.k2callback.webservice.workorder.hypersmart.com", "K2CallBackServiceImplPort"), K2CallBackService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (K2CALLBACKSERVICE_EXCEPTION!= null) {
            throw K2CALLBACKSERVICE_EXCEPTION;
        }
        return K2CALLBACKSERVICE_WSDL_LOCATION;
    }

}
